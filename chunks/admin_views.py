import osfrom django.contrib.admin.views.decorators import staff_member_requiredfrom django.conf import settingsfrom django.http import HttpResponse, HttpResponseRedirectALLOWED_FORMATS = ['gif', 'jpg', 'jpeg', 'png']@staff_member_requireddef imageupload(request):    """ upload images only """    for key in request.FILES.keys():        upload = request.FILES[key]                # check duplicates in target folder        fName = upload.name        if fName[fName.rfind('.')+1:].lower() in ALLOWED_FORMATS:            dstFile = os.path.join(settings.CHUNKS_UPLOAD_ROOT, fName)            dest = open(dstFile, 'wb')            for chunk in upload.chunks():                dest.write(chunk)            dest.close()                   return HttpResponseRedirect(request.POST.get('from', request.META.get('HTTP_REFERER', '/')))    return HttpResponse('erreur')        @staff_member_required    def imagelist(request):    """ liste uploaded images """    filez = []    if not os.path.isdir(settings.CHUNKS_UPLOAD_ROOT):        os.makedirs(settings.CHUNKS_UPLOAD_ROOT)    for file in os.listdir(settings.CHUNKS_UPLOAD_ROOT):        fname = os.path.join(settings.CHUNKS_UPLOAD_ROOT, file)        if os.path.isfile(fname) and file[file.rfind('.')+1:].lower() in ALLOWED_FORMATS:            filez.append(file)    return HttpResponse('{"images":[%s]}' % ','.join(['"%s"' % file for file in filez]), mimetype='application/json')